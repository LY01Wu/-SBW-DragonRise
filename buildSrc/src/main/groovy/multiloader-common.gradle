plugins {
    id "java-library"
    id "maven-publish"
}

base {
    archivesName = archive_name
    version = mod_version
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(java_version)
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
    // https://docs.gradle.org/current/userguide/declaring_repositories.html#declaring_content_exclusively_found_in_one_repository
    exclusiveContent {
        forRepository {
            maven {
                name = "Sponge"
                url = "https://repo.spongepowered.org/repository/maven-public"
            }
        }
        filter { includeGroupAndSubgroups("org.spongepowered") }
    }
    maven {
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
}

dependencies {
    implementation "org.jetbrains:annotations:24.1.0"

    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.32"
    annotationProcessor "org.projectlombok:lombok:1.18.32"

    // Distant Horizons
    compileOnly "maven.modrinth:DistantHorizonsApi:4.0.0"

//    runtimeOnly "top.theillusivec4.curios:curios-forge:5.4.2+1.20.1"
//    compileOnly "top.theillusivec4.curios:curios-forge:5.4.2+1.20.1:api"
//
//    implementation 'software.bernie.geckolib:geckolib-forge-1.20.1:4.4.6'
//    compileOnly "curse.maven:superb-warfare-1218165:6775652"
}

// Declare capabilities on the outgoing configurations.
// Read more about capabilities here: https://docs.gradle.org/current/userguide/component_capabilities.html#sec:declaring-additional-capabilities-for-a-local-component
["apiElements", "runtimeElements", "sourcesElements", "javadocElements"].each { variant ->
    configurations."$variant".outgoing {
        capability("$group:$strict_id-${project.name}-${minecraft_version}:$version")
        capability("$group:$strict_id:$version")
    }
    publishing.publications.configureEach {
        suppressPomMetadataWarningsFor(variant)
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"   : mod_name,
                "Specification-Vendor"  : mod_author,
                "Specification-Version" : project.jar.archiveVersion,
                "Implementation-Title"  : project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor" : mod_author,
                "Built-On-Minecraft"    : minecraft_version,
        ])
    }
}
def expandProps = [
        "mod_author"             : mod_author,
        "mod_name"               : mod_name,
        "mod_id"                 : mod_id,
        "strict_id"              : strict_id,
        "archive_name"           : archive_name,
        "contributors"           : contributors,
        "license"                : license,
        "description"            : description,
        "link_home"              : link_home,
        "link_src"               : link_src,
        "link_issues"            : link_issues,

        "version"                : version,
        "java_version"           : java_version,
        "minecraft_version"      : minecraft_version,

        "fabric_version"         : fabric_version,
        "fabric_loader_version"  : fabric_loader_version,
        "fabric_compatible_range": fabric_compatible_range,

        "forge_version"          : forge_version,
        "forge_loader_version"   : forge_loader_version,
        "forge_compatible_range" : forge_compatible_range,
]

processResources {

    filesMatching(["pack.mcmeta", "fabric.mod.json", "META-INF/mods.toml", "*.mixins.json"]) {
        expand expandProps
    }
    inputs.properties(expandProps)
}

publishing {
    publications {
        register("mavenJava", MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url System.getenv("local_maven_url")
        }
    }
}
